{"version":3,"sources":["webpack://NFBWebPlayer/./node_modules/videojs-thumbnail-sprite/dist/index.es.js"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","convertSecondToTimeString","seconds","resultSecond","resultMinute","resultHour","parseInt","displayWarning","message","console","warn","generatePreview","player","controls","sprites","sprite","spriteIndex","dom","hoverPoint","optionIndex","progressCtrl","seekBar","mouseTimeDisplay","timeTooltip","mouseTimeDisplayEl","el","timeTooltipEl","parseFloat","style","left","duration","currentWidth","isNaN","i","length","sprite_1","start","interval","parent","image","createEl","src","url","imageWidth","naturalWidth","imageHeight","naturalHeight","columns","width","columnTop","Math","floor","height","columnLeft","controlsTop","getBoundingClientRect","top","seekBarTop","topOffset","max","color","border","margin","keys","map","key","value","setProperty","removeProperty","initializeThumbnailSprite","options","undefined","controlBar","sort","e1","e2","sortSprites","e1Start","e1End","e2Start","e2End","overlapStart","overlapEnd","checkOverlap","_a","checkOptions","on","addClass","ThumbnailSprite","_super","_this","this","ready","__","constructor","create","__extends"],"mappings":"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","file":"videojs-thumbnail-sprite.67efcc8281f5b946a7ac.js","sourcesContent":["import videojs from 'video.js';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nfunction sortSprites(sprites) {\n  sprites.sort(function (e1, e2) {\n    if (e1.start < e2.start) return -1;else if (e1.start === e2.start) return 0;else return 1;\n  });\n}\n\nfunction convertSecondToTimeString(seconds) {\n  var resultSecond = 0;\n  var resultMinute = 0;\n  var resultHour = 0; // 00:00:00 Format\n\n  if (seconds <= 0) {\n    return \"00:00:00\";\n  } else if (seconds < 60) {\n    // less than a minute\n    resultSecond = seconds;\n    resultSecond = resultSecond < 10 ? \"0\" + resultSecond : resultSecond;\n    return \"00:00:\" + resultSecond;\n  } else if (seconds < 3600) {\n    // less than an hour\n    resultMinute = parseInt(\"\" + seconds / 60);\n    resultMinute = resultMinute < 10 ? \"0\" + resultMinute : resultMinute;\n    resultSecond = seconds % 60;\n    resultSecond = resultSecond < 10 ? \"0\" + resultSecond : resultSecond;\n    return \"00:\" + resultMinute + \":\" + resultSecond;\n  } else {\n    // more than an hour\n    resultHour = parseInt(\"\" + seconds / 3600);\n    resultHour = resultHour < 10 ? \"0\" + resultHour : resultHour;\n    resultMinute = parseInt(\"\" + seconds % 3600 / 60);\n    resultMinute = resultMinute < 10 ? \"0\" + resultMinute : resultMinute;\n    resultSecond = parseInt(\"\" + seconds % 3600 % 60 % 60);\n    resultSecond = resultSecond < 10 ? \"0\" + resultSecond : resultSecond;\n    return resultHour + \":\" + resultMinute + \":\" + resultSecond;\n  }\n}\n\nfunction displayWarning(message) {\n  console.warn(\"[videojs-thumbnail-sprite] \" + message);\n}\n\nfunction checkOverlap(sprites) {\n  // Check if the sprite thumbnails have overlapping section among them,\n  // so that previews display their corresponding points of time correctly\n  for (var i = 0; i < sprites.length - 1; i++) {\n    var e1Start = sprites[i].start;\n    var e1End = e1Start + sprites[i].duration;\n    var e2Start = sprites[i + 1].start;\n    var e2End = e2Start + sprites[i + 1].duration;\n\n    if (e2Start < e1End) {\n      var overlapStart = e1Start;\n      var overlapEnd = Math.max(e1End, e2End); // If there is an overlap, generate warning on console\n\n      displayWarning(\"Provided thumbnail sprites have overlapping sections among them: [\" + convertSecondToTimeString(overlapStart) + \" ~ \" + convertSecondToTimeString(overlapEnd) + \"] Preview images may not match the corresponding point of time correctly.\");\n    }\n  }\n}\n\nfunction checkOptions(sprites) {\n  // Check if the sprite thumbnails have all required options properly,\n  // so that generating each previews executes correctly\n  for (var i = 0; i < sprites.length; i++) {\n    var _a = sprites[i],\n        start = _a.start,\n        duration = _a.duration,\n        interval = _a.interval,\n        width = _a.width,\n        height = _a.height,\n        url = _a.url; // # `start` should be zero or positive value\n\n    if (start < 0) {\n      displayWarning(\"`start` should be zero or positive value: [\" + convertSecondToTimeString(start) + \" ~ \" + convertSecondToTimeString(start + duration - 1) + \"] Preview images may not show as expected\");\n    } // # `width` and `height` should not be undefined\n\n\n    if (width === undefined || height === undefined) {\n      displayWarning(\"`width` and `height` should be provided: [\" + convertSecondToTimeString(start) + \" ~ \" + convertSecondToTimeString(start + duration - 1) + \"] Preview images may not show as expected\");\n    } // # `interval` should be able to fully cover entire duration\n\n\n    if (duration % interval !== 0) {\n      displayWarning(\"`duration` should be multiple of `interval` so that it can fully cover entire duration: [\" + convertSecondToTimeString(start) + \" ~ \" + convertSecondToTimeString(start + duration - 1) + \"] Preview images may not show as expected\");\n    }\n  }\n}\n\nfunction applyStyle(parent, style) {\n  var keys = Object.keys(style);\n  keys.map(function (key) {\n    var value = style[key];\n    if (value !== '') parent.style.setProperty(key, value);else // If key's value is empty, remove that style\n      parent.style.removeProperty(key);\n  });\n}\n\nfunction generatePreview(player, controls, sprites) {\n  var dom = videojs.dom;\n  var sprite; // 3-dimension approach\n\n  var hoverPoint = -1; // which point of time currently hovering\n\n  var optionIndex = -1; // which sprite image to use\n\n  var spriteIndex = -1; // which one inside a sprite image to use\n  // The case that Progress Control UI does not exist have already been filtered before this function is called\n\n  var progressCtrl = controls['progressControl']; // If there is no Seek Bar UI or Mouse Time Display UI,\n  // No Need to initialize the plugin\n\n  if (progressCtrl['seekBar'] === null) return;\n  var seekBar = progressCtrl['seekBar'];\n  if (seekBar['mouseTimeDisplay'] === null) return;\n  var mouseTimeDisplay = seekBar['mouseTimeDisplay'];\n  if (mouseTimeDisplay['timeTooltip'] === null) return;\n  var timeTooltip = mouseTimeDisplay['timeTooltip']; // The components used to calculate the current point of time\n\n  var mouseTimeDisplayEl = mouseTimeDisplay.el(); // The component to apply preview image on\n\n  var timeTooltipEl = timeTooltip.el(); // from mouse pointer's location, get the point of time\n\n  hoverPoint = parseFloat(mouseTimeDisplayEl.style.left);\n  hoverPoint = player.duration() * (hoverPoint / seekBar.currentWidth()); // from point of time currently hovering, get the corresponding preview image\n\n  if (!isNaN(hoverPoint)) {\n    // determine where the `hoverPoint` belongs\n    for (var i = 0; i < sprites.length; i++) {\n      var sprite_1 = sprites[i];\n\n      if (hoverPoint < sprite_1.start + sprite_1.duration) {\n        optionIndex = i;\n        break;\n      }\n    }\n  } else {\n    // if `hoverPoint` has a strange value, assign default value as 0\n    hoverPoint = 0;\n  } // if `optionIndex` is -1, it means corresponding thumbnail sprite does not exist\n  // so just use the first sprite\n  // calculate which image inside the sprite to use\n\n\n  spriteIndex = optionIndex !== -1 ? (hoverPoint - sprites[optionIndex].start) / sprites[optionIndex].interval : hoverPoint;\n  sprite = optionIndex !== -1 ? sprites[optionIndex] : sprites[0]; // create temporary `img` element to get the size of sprite thumbnail\n\n  var image = dom.createEl('img', {\n    src: sprite.url\n  });\n  var imageWidth = image.naturalWidth;\n  var imageHeight = image.naturalHeight; // get the coordinate to extract preview image from sprite thumbnail\n\n  var columns = imageWidth / sprite.width;\n  var columnTop = Math.floor(spriteIndex / columns) * -sprite.height;\n  var columnLeft = Math.floor(spriteIndex % columns) * -sprite.width; // get the position to display preview image\n\n  var controlsTop = dom.getBoundingClientRect(controls.el()).top;\n  var seekBarTop = dom.getBoundingClientRect(controls.el()).top;\n  var topOffset = -sprite.height - Math.max(0, seekBarTop - controlsTop); // apply image preview\n\n  applyStyle(timeTooltipEl, {\n    width: sprite.width + \"px\",\n    height: sprite.height + \"px\",\n    'background-image': \"url(\" + sprite.url + \")\",\n    'background-repeat': \"no-repeat\",\n    'background-position': columnLeft + \"px \" + columnTop + \"px\",\n    'background-size': imageWidth + \"px \" + imageHeight + \"px;\",\n    top: topOffset + \"px\",\n    color: \"#ffffff\",\n    'text-shadow': \"1px 1px #000000\",\n    border: \"1px 1px #000000\",\n    margin: \"0 1px\"\n  }); // TODO\n  // apply global style from `options` parameter\n}\n\nfunction initializeThumbnailSprite(player, options) {\n  // If there is no option provided,\n  // No need to initialize the plugin\n  if (options.sprites === undefined) return;\n  var sprites = options.sprites; // If there is no Control Bar UI or no Progress Control UI,\n  // No need to initialize the plugin\n\n  if (player.controlBar === undefined) return;\n  var controls = player.controlBar;\n  if (controls['progressControl'] === undefined) return;\n  var progressCtrl = controls['progressControl']; // Sort sprite images to prevent inappropriate order\n\n  sortSprites(sprites); // Check if the sprite thumbnails have overlapping section among them,\n  // so that previews display their corresponding points of time correctly\n\n  checkOverlap(sprites); // Check if the sprite thumbnails have all required options properly,\n  // so that generating each previews executes correctly\n\n  checkOptions(sprites); // Register event listener for hovering on progress control\n\n  progressCtrl.on(\"mousemove\", function () {\n    return generatePreview(player, controls, sprites);\n  });\n  progressCtrl.on(\"touchmove\", function () {\n    return generatePreview(player, controls, sprites);\n  }); // Add class to enable styling\n\n  player.addClass(\"vjs-sprite-thumbnails\");\n}\n\nvar Plugin = videojs.getPlugin('plugin');\n\nvar ThumbnailSprite =\n/** @class */\nfunction (_super) {\n  __extends(ThumbnailSprite, _super);\n\n  function ThumbnailSprite(player, options) {\n    var _this = _super.call(this, player) || this;\n\n    var emptyOptions = {\n      sprites: []\n    };\n    _this.options = options !== undefined ? options : emptyOptions; // When player instance is ready, initialize the plugin\n\n    _this.player.ready(function () {\n      initializeThumbnailSprite(_this.player, _this.options);\n    });\n\n    return _this;\n  }\n\n  return ThumbnailSprite;\n}(Plugin);\n\nvideojs.registerPlugin('thumbnailSprite', ThumbnailSprite);\n\n(function (ThumbnailSprite) {\n})(ThumbnailSprite || (ThumbnailSprite = {}));\n\nvar ThumbnailSprite$1 = ThumbnailSprite;\n\nexport default ThumbnailSprite$1;\n"],"sourceRoot":""}